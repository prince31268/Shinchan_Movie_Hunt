



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
 
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;700&display=swap');

*{
    box-sizing: border-box;
}

:root{
    --primary-color:#22254b;
    --secondary-color: rgb(150, 162, 125);
}

body{
    background-color: var(--primary-color);
    font-family: 'Poppins', sans-serif;
    margin: 0;
}



header{
    padding:1rem;
    display:flex;
   color: #ff105f;
    padding: 10px 12px;
    background-color:#414A4C;
}
.header home{
    background-color: transparent;
    border: 2px solid var(--primary-color);
    padding:0.7rem 1rem;
    cursor: pointer;
    background-color: rgb(20, 3, 70);
    border-radius: 9px;
    font-size: .8rem;
    color:white;
    font-family: inherit;
}

.navbar a{
    float: left;
  display: block;
  color:#7378c5;
  text-align: center;
  padding: 16px 10px;
  text-decoration: none;
  font-family: inherit;
 
  font-size: 1rem;
}



.search{
    
    background-color: transparent;
    border: 2px solid var(--primary-color);
    padding: 10px 12px;
    margin-left: 40%;
    margin-top:0.8em ;
    text-decoration: none;
    border-radius: 50px;
    font-size: 1rem;
    color:#fff;
    font-family: inherit;
    
}

.search:focus{
    outline:0;
    background-color: var(--primary-color);
}

.search::placeholder{
    color: #7378c5;
}

main{
    display:flex;
    flex-wrap: wrap;
    justify-content: center;
}

.movie {
    width: 300px;
    margin: 1rem;
    border-radius: 3px;
    box-shadow: 0.2px 4px 5px rgba(0,0,0,0.1);
   
    background-color:#414A4C;
    position:relative;
    overflow: hidden;
}


.movie img{
    width:100%;
}

.movie-info{
    color:#eee;
    
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.5rem 1rem 1rem;
    letter-spacing: 0.5px;
}

.movie-info h3{
    margin-top: 0;
}

.movie-info span{
    background-color: var(--primary-color);
    padding: 0.25rem 0.5rem;
    border-radius: 3px;
    font-weight: bold;
}

.movie-info span.green{
    color:lightgreen;
}

.movie-info span.orange{
    color:orange;
}

.movie-info span.red{
    color:red;
}

.overview{
    position:absolute;
    left:0;
    right:0;
    bottom:0;
    background-color:white;
    padding: 1rem;
    max-height: 100%;
    transform:translateY(101%);
    transition:transform 0.3s ease-in;
}



.movie:hover .overview{
    transform:translateY(0)
}

#tags{
    width:80%;
    display:flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    margin: 10px auto;
}

.tag{
    color:white;
    padding:10px 20px;
    background-color:#414A4C;
    border-radius: 50px;
    margin:5px;
    display:inline-block;
    cursor: pointer;
}

.tag.highlight{
    background-color: #22254b;
}
.no-results{
    color:white;
}

.pagination{
    display:flex;
    margin:10px 30px;
    align-items: center;
    justify-content: center;
    color:#414A4C;
}

.page{
    padding:20px;
    cursor:pointer;
}

.page.disabled{
    cursor:not-allowed;
    color:#414A4C;
}

.current{
    padding: 10px 20px;
    border-radius: 50%;
    border: 5px solid #414A4C;
    font-size: 20px;
    font-weight: 600;
}
.watchlist{
    background-color: #414A4C;
    color:white;
    font-size: 16px;
    font-weight: bold;
    border:0;
    border-radius: 50px;
    padding: 10px 20px;
    margin-top: 5px;
}

.btn-login{
    background-color: transparent;
    border: 2px solid var(--primary-color);
    padding:0.7rem 1rem;
    cursor: pointer;
    /* background-color: rgb(20, 3, 70); */
    border-radius: 9px;
    font-size: .8rem;
    color:white;
    font-family: inherit;
    margin-right: 5px;
  }
  .overlay{
    width: 100%;
    position: fixed;
    top: 0%;
    background: rgba(0, 0, 0, 0.5);
    height: 100vh;
    z-index: -1;
    opacity: 0;
    transition: 1s;
  }
  .showoverlay{
    opacity: 1;
    z-index: 1;
  
  }
  .loginform{
    width:350px ;
    padding: 30px 30px;
    background-color: rgb(172, 224, 231);
    position: absolute;
    transition: 1s;
    left: 50%;
    z-index: 9;
    top: -50%;
    box-shadow: 0px 0px 10px 30px #ccc;
    transform: translate(-50%,-50%);
    background: linear-gradient(to right,#db99af,#d6c196);
    
  }
  .showloginform{
    top: 45%;
  }
  .loginform input{
    width: 100%;
    padding: 10px 10px;
    margin-top: 2px;
    margin-bottom: 10px;
    height:35px;
  }
  .loginform button{
    width: 100%;
    display: block;
    background: linear-gradient(to right,#ff105f,#ffad06);
    background-color: blue;
    color: white;
    padding: 10px 10px;
    border-radius: 30px;
    align-items: center;
  }
  .loginform span{
    position: absolute;
    right: 0;
    width: 30px;
    cursor: pointer;
    color: white;
    height: 30px;
    background-color: red;
    text-align: center;
    top: 0;
  }

  .btn-signup{
    background-color: transparent;
    border: 2px solid var(--primary-color);
    padding:0.7rem 1rem;
    cursor: pointer;
    /* background-color: rgb(20, 3, 70); */
    border-radius: 9px;
    font-size: .8rem;
    color:white;
    font-family: inherit;
    margin-right: 5px;
  }

  .signupform{
    width:350px ;
    padding: 30px 30px;
    background-color: rgb(172, 224, 231);
    position: absolute;
    transition: 0.8s;
    left: 50%;
    z-index: 9;
    top: -50%;
    box-shadow: 0px 0px 10px 30px #ccc;
    transform: translate(-50%,-50%);
    background: linear-gradient(to right,#db99af,#d6c196);
  }
  .showsignupform{
    top: 50%;
  }
  .signupform input{
    width: 100%;
    padding: 10px 20px;
    margin-top: 2px;
    margin-bottom: 15px;
    height:35px;
  }
  .signupform button{
    width: 100%;
    display: block;
    background: linear-gradient(to right,#ff105f,#ffad06);
    background-color: blue;
    color: white;
    padding: 10px 10px;
    border-radius: 30px;
    align-items: center;
  }
  .signupform span{
    position: absolute;
    right: 0;
    width: 30px;
    cursor: pointer;
    color: white;
    height: 30px;
    background-color: red;
    text-align: center;
    top: 0;
  }


    </style>

    <title>Movie Hunt</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

   
   


</head>
<body>
    
  <form  id="form">
    <input type="text" placeholder="Search" id="search" class="search">
</form>

   <div id="tags"></div>    <!--  for genre -->

    

    <main id="main"></main>  <!--  to show movie in body -->

    <div class="pagination">
        <div class="page" id="prev">Previous Page</div>
        <div class="current" id="current">1</div>
        <div class="page" id="next">Next Page</div>

    </div>

    <script >
      const API_KEY = 'api_key=18990b2a05ffcf2974107977620ff5be';
const BASE_URL = 'https://api.themoviedb.org/3';
const API_URL = BASE_URL + '/discover/movie?sort_by=popularity.desc&'+API_KEY;
const IMG_URL = 'https://image.tmdb.org/t/p/w500';
const searchURL = BASE_URL + '/search/movie?'+API_KEY;
const watchlistURL=`${BASE_URL}/account/akashgupta_10/watchlist?${API_KEY}`;


const main = document.getElementById('main');
const form =  document.getElementById('form');
const search = document.getElementById('search');


var currentPage = 1;
var nextPage = 2;
var prevPage = 3;
var lastUrl = '';
var totalPages = 100;
 
getMovies(API_URL);  // function call for showing moving according to popularity

 function getMovies(url){
    lastUrl=url;
    fetch(url).then(res => res.json()).then(data => {
        console.log(data.results);
        if(data.results.length !== 0){
            showMovies(data.results);
            currentPage = data.page;
            nextPage = currentPage + 1;
            prevPage = currentPage - 1;
            totalPages = data.total_pages;

            current.innerText = currentPage;

            if(currentPage <= 1){
              prev.classList.add('disabled');
              next.classList.remove('disabled')
            }else if(currentPage>= totalPages){
              prev.classList.remove('disabled');
              next.classList.add('disabled')
            }else{
              prev.classList.remove('disabled');
              next.classList.remove('disabled')
            }

            tagsEl.scrollIntoView({behavior : 'smooth'})
 }
 else{
            main.innerHTML= `<h1 class="no-results">No Results Found</h1>`
        }
        
   })
}


 function showMovies(data) {
    main.innerHTML = '';

    data.forEach(movie => {
        const {title, poster_path, vote_average, overview, id} = movie;
        const movieEl = document.createElement('div');
         movieEl.classList.add('movie');
        movieEl.innerHTML = `
             <img src="${IMG_URL+poster_path}" alt="${title}">
            <div class="movie-info">
                <h3>${title}</h3>
                <span class="${getColor(vote_average)}">${vote_average}</span>

            </div>
            

       
            <div class="overview">
            <h3>Overview</h3>
            ${overview}
            <br/> 
            <button class="watchlist" id="${id}">+Add to Watchlist</button>
            
            
          </div>
         `
        
         main.appendChild(movieEl);
       
        document.getElementById(id).addEventListener('click', () => {
          fetch(`/watchlist?movieid=${id}&&chatid=<%=chatid%>`,{method:"POST"})
             console.log(id);
            alert("Movie Added to watchlist succesfuly");
          
        })
      
       
       
       
    })
}




  
 function getColor(vote) {
    if(vote>= 8){
        return 'green'
    }else if(vote >= 5){
        return "red"
    }else{
        return 'orange'
    }
}

form.addEventListener('submit', (e) => {
    e.preventDefault();
    selectedGenre=[];
    setGenre();
    const searchTerm = search.value;
    
    if(searchTerm) {
        getMovies(searchURL+'&query='+searchTerm)
     }else{
    getMovies(API_URL);
     }

})

// setting genre
var selectedGenre = []
const genres = [
    {
      "id": 28,
      "name": "Action"
    },
    {
      "id": 12,
      "name": "Adventure"
    },
    {
      "id": 16,
      "name": "Animation"
    },
    {
      "id": 35,
      "name": "Comedy"
    },
    {
      "id": 80,
      "name": "Crime"
    },
    {
      "id": 99,
      "name": "Documentary"
    },
    {
      "id": 18,
      "name": "Drama"
    },
    {
      "id": 10751,
      "name": "Family"
    },
    {
      "id": 14,
      "name": "Fantasy"
    },
    {
      "id": 36,
      "name": "History"
    },
    {
      "id": 27,
      "name": "Horror"
    },
    {
      "id": 10402,
      "name": "Music"
    },
    {
      "id": 9648,
      "name": "Mystery"
    },
    {
      "id": 10749,
      "name": "Romance"
    },
    {
      "id": 878,
      "name": "Science Fiction"
    },
    {
      "id": 10770,
      "name": "TV Movie"
    },
    {
      "id": 53,
      "name": "Thriller"
    },
    {
      "id": 10752,
      "name": "War"
    },
    {
      "id": 37,
      "name": "Western"
    }
  ]
  const tagsEl=document.getElementById('tags');
  setGenre();
 function setGenre(){
          tagsEl.innerHTML='';
          
          genres.forEach(genre=>{
            const t=document.createElement('div');
            t.classList.add('tag');
            t.id=genre.id;
            t.innerText=genre.name;
            t.addEventListener('click', () => {
                if(selectedGenre.length == 0){
                    selectedGenre.push(genre.id);
                }else{
                    if(selectedGenre.includes(genre.id)){

                        selectedGenre.forEach((id, idx) => {
                            if(id == genre.id){
                                selectedGenre.splice(idx, 1);
                            }
                        })
                    }else{
                        selectedGenre.push(genre.id);
                    }
                }
                console.log(selectedGenre)
                getMovies(API_URL + '&with_genres='+encodeURI(selectedGenre.join(',')))
                highlightSelection()
            })
            tagsEl.append(t);
          })
  }
  function highlightSelection() {
    const tags = document.querySelectorAll('.tag');
    tags.forEach(tag => {
        tag.classList.remove('highlight')
    })
    clearBtn()
    if(selectedGenre.length !=0){   
        selectedGenre.forEach(id => {
            const hightlightedTag = document.getElementById(id);
            hightlightedTag.classList.add('highlight');
        })
    }

}

function clearBtn(){
    let clearBtn = document.getElementById('clear');
    if(clearBtn){
        clearBtn.classList.add('highlight')
    }else{
            
        let clear = document.createElement('div');
        clear.classList.add('tag','highlight');
        clear.id = 'clear';
        clear.innerText = 'Clear x';
        clear.addEventListener('click', () => {
            selectedGenre = [];
            setGenre();            
            getMovies(API_URL);
        })
        tagsEl.append(clear);
    }
    
}

// pagination
const prev=document.getElementById('prev');
const current=document.getElementById('current');
const next=document.getElementById('next');




prev.addEventListener('click', () => {
    if(prevPage > 0){
      pageCall(prevPage);
    }
  })
  
  next.addEventListener('click', () => {
    if(nextPage <= totalPages){
      pageCall(nextPage);
    }
  })
  
  function pageCall(page){
    let urlSplit = lastUrl.split('?');
    let queryParams = urlSplit[1].split('&');
    let key = queryParams[queryParams.length -1].split('=');
    if(key[0] != 'page'){
      let url = lastUrl + '&page='+page
      getMovies(url);
    }else{
      key[1] = page.toString();
      let a = key.join('=');
      queryParams[queryParams.length -1] = a;
      let b = queryParams.join('&');
      let url = urlSplit[0] +'?'+ b
      getMovies(url);
    }
  }

    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
crossorigin="anonymous"></script>



</body>




</html>
